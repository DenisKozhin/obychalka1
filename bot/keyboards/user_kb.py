from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from bot.database.models import City, Store
from sqlalchemy.ext.asyncio import AsyncSession

# –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def get_main_menu_kb():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    builder = ReplyKeyboardBuilder()
    
    builder.add(
        KeyboardButton(text="üìö –ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ –∑–Ω–∞–Ω—å"),
        KeyboardButton(text="üìù –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç"),
        KeyboardButton(text="üèÜ –ú–æ—ó –±–∞–ª–∏"),
        KeyboardButton(text="üì¢ –û–≥–æ–ª–æ—à–µ–Ω–Ω—è")
    )
    
    # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ 2 —Å—Ç—Ä–æ–∫–∏ –ø–æ 2 –∫–Ω–æ–ø–∫–∏
    builder.adjust(2, 2)
    
    return builder.as_markup(resize_keyboard=True)

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –≥–æ—Ä–æ–¥–∞–º–∏
async def get_cities_kb(session: AsyncSession):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞"""
    from bot.database.operations_library import get_cities, create_default_cities
    
    builder = InlineKeyboardBuilder()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤ –∏–∑ –ë–î –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ
    cities = await get_cities(session)
    if not cities:
        cities = await create_default_cities(session)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≥–æ—Ä–æ–¥–∞
    for city in cities:
        builder.add(InlineKeyboardButton(
            text=city.name,
            callback_data=f"city_{city.city_id}"
        ))
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ (–ø–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Å—Ç—Ä–æ–∫—É)
    builder.adjust(1)
    
    return builder.as_markup()

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –º–∞–≥–∞–∑–∏–Ω–∞–º–∏
async def get_stores_kb(session: AsyncSession, city_id: int):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–∞–≥–∞–∑–∏–Ω–∞"""
    from bot.database.operations_library import get_stores_by_city, create_default_stores
    
    builder = InlineKeyboardBuilder()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ
    stores = await get_stores_by_city(session, city_id)
    if not stores:
        stores = await create_default_stores(session, city_id)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
    for store in stores:
        builder.add(InlineKeyboardButton(
            text=store.name,
            callback_data=f"store_{store.store_id}"
        ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤—ã–±–æ—Ä—É –≥–æ—Ä–æ–¥–∞
    builder.add(InlineKeyboardButton(
        text="üîô –ù–∞–∑–∞–¥ –¥–æ –≤–∏–±–æ—Ä—É –º—ñ—Å—Ç–∞",
        callback_data=f"back_to_cities"
    ))
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ (–ø–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Å—Ç—Ä–æ–∫—É)
    builder.adjust(1)
    
    return builder.as_markup()